package it.eng.pathway.controller;

import java.util.ArrayList;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;

import it.eng.pathway.frontend.business.ContentBusiness;
import it.eng.pathway.frontend.model.Content;
import it.eng.pathway.utilitymodel.CustomSession;

@Controller
@SessionAttributes({"xSessionId" , "sin"})
public class Lifestyle {
	
private static final String FORMATTER_STRING = "yyyy-MM-dd";
private static final String READABLE_STRING = "dd-MM-yyyy hh:mm";
	//	static ArrayList<String> labels;
	static ArrayList<CustomSession> sessions;
	
	@Autowired
	private ContentBusiness contentBusiness;
	
	private MessageSource msg;
	@Autowired
    public void AccountsController(MessageSource msgSrc) {
     this.msg = msgSrc;
    }
	
	@RequestMapping(value="/phisicalActivity", method=RequestMethod.GET)
	public String homeRender(Model model, Locale locale){
		Content tips=contentBusiness.find("PhysicalActivity", "Tips",locale);
		if (tips!=null){
			model.addAttribute("tips", tips.getHtml());
			model.addAttribute("tipsId", tips.getId());
		}
		
		Content recomm=contentBusiness.find("PhysicalActivity", "Recomm",locale);
		if (recomm!=null){
			model.addAttribute("recomm", recomm.getHtml());
			model.addAttribute("recommId", recomm.getId());
		}
		
		Content other=contentBusiness.find("PhysicalActivity", "Other",locale);
		if (other!=null){
			model.addAttribute("other", other.getHtml());
			model.addAttribute("otherId", other.getId());
		}
		
		return "physicalActivityPage";
	}
	
	@RequestMapping(value="/healthy", method=RequestMethod.GET)
	public String healthyRender(){
		return "healthyPage";
	}
	
	@RequestMapping(value="/smoking", method=RequestMethod.GET)
	public String smokingRender(Model model, Locale locale){
		Content tips=contentBusiness.find("Smoking", "Tips",locale);
		if (tips!=null){
			model.addAttribute("tips", tips.getHtml());
			model.addAttribute("tipsId", tips.getId());
		}
		
		Content recomm=contentBusiness.find("Smoking", "Recomm",locale);
		if (recomm!=null){
			model.addAttribute("recomm", recomm.getHtml());
			model.addAttribute("recommId", recomm.getId());
		}
		
		Content other=contentBusiness.find("Smoking", "Other",locale);
		if (other!=null){
			model.addAttribute("other", other.getHtml());
			model.addAttribute("otherId", other.getId());
		}
		
		
		return "smokingPage";
	}
	
	@RequestMapping(value="/alcohol", method=RequestMethod.GET)
	public String alcoholRender(Model model, Locale locale){
		Content tips=contentBusiness.find("Alcohol", "Tips",locale);
		if (tips!=null){
			model.addAttribute("tips", tips.getHtml());
			model.addAttribute("tipsId", tips.getId());
		}
		
		Content recomm=contentBusiness.find("Alcohol", "Recomm",locale);
		if (recomm!=null){
			model.addAttribute("recomm", recomm.getHtml());
			model.addAttribute("recommId", recomm.getId());
		}
		
		Content other=contentBusiness.find("Alcohol", "Other",locale);
		if (other!=null){
			model.addAttribute("other", other.getHtml());
			model.addAttribute("otherId", other.getId());
		}
		
		return "alcoholPage";
	}
	
	@RequestMapping(value="/diet", method=RequestMethod.GET)
	public String dietRender(Model model, Locale locale){
		Content tips=contentBusiness.find("Diet", "Tips",locale);
		if (tips!=null){
			model.addAttribute("tips", tips.getHtml());
			model.addAttribute("tipsId", tips.getId());
		}
		
		Content recomm=contentBusiness.find("Diet", "Recomm",locale);
		if (recomm!=null){
			model.addAttribute("recomm", recomm.getHtml());
			model.addAttribute("recommId", recomm.getId());
		}
		
		Content other=contentBusiness.find("Diet", "Other",locale);
		if (other!=null){
			model.addAttribute("other", other.getHtml());
			model.addAttribute("otherId", other.getId());
		}
		
		Content recipe=contentBusiness.find("Diet", "Recipe",locale);
		if (recipe!=null){
			model.addAttribute("recipe", recipe.getHtml());
			model.addAttribute("recipeId", recipe.getId());
		}
		
		return "dietPage";
	}
	
	@RequestMapping(value="/stress", method=RequestMethod.GET)
	public String stressRender(Model model, Locale locale){
		
		Content tips=contentBusiness.find("Stress", "Tips",locale);
		if (tips!=null){
			model.addAttribute("tips", tips.getHtml());
			model.addAttribute("tipsId", tips.getId());
		}
		
		Content recomm=contentBusiness.find("Stress", "Recomm",locale);
		if (recomm!=null){
			model.addAttribute("recomm", recomm.getHtml());
			model.addAttribute("recommId", recomm.getId());
		}
		
		Content other=contentBusiness.find("Stress", "Other",locale);
		if (other!=null){
			model.addAttribute("other", other.getHtml());
			model.addAttribute("otherId", other.getId());
		}
		
		return "stressPage";
	}
	
}
